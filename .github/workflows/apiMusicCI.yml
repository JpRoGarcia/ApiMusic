name: ApiMusic CI

on:
  push:
    branches:
      - main
jobs:
#  unitest:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: Install Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 18
#
#      - name: Install dependencies
#        run: npm install
#
#      - name: Run tests
#        run: npm test
#
#  build:
#    needs: unitest
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#         
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#       
#      - name: Build and Push Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/appmusic:latest

  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.0  # Asegúrate de especificar la versión correcta de Terraform

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform Changes
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}



  